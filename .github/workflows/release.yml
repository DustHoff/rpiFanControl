name: release
on:
  push:
    branch: "*"
permissions:
  contents: write
jobs:
  go:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3.2.0
        with:
          version: latest
          args: release --clean --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary
          path: dist/rpifancontrol_linux_arm64/rpifancontrol
          if-no-files-found: error
  docker:
    runs-on: ubuntu-latest
    needs: go
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: binary
          path: dist/rpifancontrol_linux_arm64/rpifancontrol
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/dusthoff/fancontrol
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

